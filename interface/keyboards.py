from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from database import Database

db = Database()

def get_main_menu():
    keyboard = [
        [
            InlineKeyboardButton(text="üìã –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ—à–µ–ª—å–∫–∏", callback_data="show_wallets"),
            InlineKeyboardButton(text="ü™ô –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–∫–µ–Ω—ã", callback_data="show_tokens")
        ],
        [
            InlineKeyboardButton(text="‚ÑπÔ∏è –ö–æ–º–∞–Ω–¥—ã", callback_data="show_commands"),
            InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="show_settings")
        ],
        [
            InlineKeyboardButton(text="–¢–µ—Å—Ç –∞–ø–∏ (–ø–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–∞–Ω–∑–∞)", callback_data="test_api_last_transaction")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_back_button():
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")]])

def get_tokens_keyboard(selected_tokens, is_edit=False):
    tokens = [
        "HITCOIN",
        "S",
        "ROSTIKSON 2.0",
        "GRIMASS"
    ]
    keyboard = []
    for i, token in enumerate(tokens):
        callback_data = f"toggle_token_{token}"
        text = f"‚úÖ {token}" if token in selected_tokens else f"‚ùå {token}"
        if i % 2 == 0 and i + 1 < len(tokens):
            keyboard.append([
                InlineKeyboardButton(text=text, callback_data=callback_data),
                InlineKeyboardButton(text=f"‚úÖ {tokens[i+1]}" if tokens[i+1] in selected_tokens else f"‚ùå {tokens[i+1]}", callback_data=f"toggle_token_{tokens[i+1]}")
            ])
        elif i % 2 == 0:
            keyboard.append([InlineKeyboardButton(text=text, callback_data=callback_data)])
    if is_edit:
        keyboard.append([InlineKeyboardButton(text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", callback_data="save_tokens")])
    else:
        keyboard.append([InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_tokens")])
    keyboard.append([InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_wallet_control_keyboard(wallet_id):
    keyboard = [
        [
            InlineKeyboardButton(text="‚úèÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å", callback_data=f"rename_wallet_{wallet_id}"),
            InlineKeyboardButton(text="ü™ô –ò–∑–º–µ–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω—ã", callback_data=f"edit_tokens_{wallet_id}")
        ],
        [
            InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_wallet_{wallet_id}"),
            InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_wallets_list():
    wallets = db.get_all_wallets()
    if not wallets:
        return "üìú –ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–æ—à–µ–ª—å–∫–æ–≤.", get_main_menu()
    text = "üìú –°–ø–∏—Å–æ–∫ –∫–æ—à–µ–ª—å–∫–æ–≤:\n\n"
    for wallet in wallets:
        text += f"üí∞ {wallet['name']} ‚Äî {wallet['address'][-4:]}\n"
    keyboard = []
    for wallet in wallets:
        keyboard.append([InlineKeyboardButton(text=f"üí∞ {wallet['name']} ({wallet['address'][-4:]})", callback_data=f"select_wallet_{wallet['id']}")])
    keyboard.append([InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")])
    return text, InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_tracked_tokens_list():
    tokens = db.get_all_tracked_tokens()
    if not tokens:
        return "ü™ô –ù–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤.", get_main_menu()
    text = "ü™ô –°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤:\n\n"
    for token in tokens:
        text += f"üíé {token['token_name']} ‚Äî {token['contract_address'][-4:]} (–¢—Ä–µ–¥: {token['thread_id']})\n"
    keyboard = [
        [
            InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω", callback_data="add_token"),
            InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")
        ]
    ]
    return text, InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_token_control_keyboard(token_id):
    keyboard = [
        [
            InlineKeyboardButton(text="üßµ –ò–∑–º–µ–Ω–∏—Ç—å —Ç—Ä–µ–¥", callback_data=f"edit_token_thread_{token_id}"),
            InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_token_{token_id}")
        ],
        [
            InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_token_name_confirmation_keyboard():
    keyboard = [
        [
            InlineKeyboardButton(text="‚úÖ –î–∞", callback_data="confirm_token_name"),
            InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="reject_token_name")
        ],
        [
            InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_thread_confirmation_keyboard():
    keyboard = [
        [
            InlineKeyboardButton(text="‚úÖ –î–∞", callback_data="thread_exists"),
            InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="thread_not_exists")
        ],
        [
            InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_commands_list():
    text = (
        "‚ÑπÔ∏è –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n\n"
        "*/start* ‚Äî –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "*/get_thread_id* ‚Äî –£–∑–Ω–∞—Ç—å ID —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–¥–∞\n"
        "*/get_last_transaction* ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é\n"
        "*/Edit_XXXX* ‚Äî –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ—à–µ–ª–µ–∫ (XXXX ‚Äî –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Å–∏–º–≤–æ–ª–∞ –∞–¥—Ä–µ—Å–∞)\n"
        "*/edit_XXXX* ‚Äî –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–∫–µ–Ω (XXXX ‚Äî –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Å–∏–º–≤–æ–ª–∞ –∞–¥—Ä–µ—Å–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞)"
    )
    keyboard = [[
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")
    ]]
    return text, InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_settings_list(check_interval="150", send_last="‚ùå–í–´–ö–õ", api_errors="‚ùå–í–´–ö–õ", transaction_info="‚úÖ–í–ö–õ", interface_info="‚ùå–í–´–ö–õ", debug="‚ùå–í–´–ö–õ"):
    text = (
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞\n\n"
        "‚è± –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ ‚Äî –∫–∞–∫ —á–∞—Å—Ç–æ –±–æ—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏\n"
        "üì® –ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ‚Äî –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏\n"
        "üö® –û—à–∏–±–∫–∏ API ‚Äî –ª–æ–≥–∏ –æ—à–∏–±–æ–∫ –≤–Ω–µ—à–Ω–∏—Ö API\n"
        "üìù –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π ‚Äî –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏\n"
        "üñ± –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ ‚Äî –ª–æ–≥–∏ –¥–µ–π—Å—Ç–≤–∏–π –≤ –º–µ–Ω—é\n"
        "üîç –û—Ç–ª–∞–¥–∫–∞ ‚Äî –ø–æ–¥—Ä–æ–±–Ω—ã–µ –æ—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
    )
    keyboard = [
        [
            InlineKeyboardButton(text=f"‚è± –ò–Ω—Ç–µ—Ä–≤–∞–ª ({check_interval})", callback_data="edit_setting_CHECK_INTERVAL"),
            InlineKeyboardButton(text=f"üì® –ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ({send_last})", callback_data="toggle_SEND_LAST_TRANSACTION")
        ],
        [InlineKeyboardButton(text="–õ–û–ì–ò", callback_data="noop")],
        [
            InlineKeyboardButton(text=f"üö® –û—à–∏–±–∫–∏ API ({api_errors})", callback_data="toggle_API_ERRORS"),
            InlineKeyboardButton(text=f"üìù –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ ({transaction_info})", callback_data="toggle_TRANSACTION_INFO")
        ],
        [
            InlineKeyboardButton(text=f"üñ± –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å ({interface_info})", callback_data="toggle_INTERFACE_INFO"),
            InlineKeyboardButton(text=f"üîç –û—Ç–ª–∞–¥–∫–∞ ({debug})", callback_data="toggle_DEBUG")
        ],
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")]
    ]
    return text, InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_interval_edit_keyboard():
    keyboard = [
        [
            InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)