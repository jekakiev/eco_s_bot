from aiogram.utils.keyboard import InlineKeyboardBuilder
from database import Database
from threads_config import TOKEN_CONFIG

db = Database()

# === –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ ===
def get_main_menu():
    builder = InlineKeyboardBuilder()
    builder.button(text="üìú –°–ø–∏—Å–æ–∫ –∫–æ—à–µ–ª—å–∫–æ–≤", callback_data="show_wallets")
    builder.button(text="ü™ô –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ S —Ç–æ–∫–µ–Ω—ã", callback_data="show_tokens")
    builder.button(text="‚ÑπÔ∏è –ö–æ–º–∞–Ω–¥—ã", callback_data="show_commands")
    builder.adjust(1)
    return builder.as_markup()

# === –ö–ù–û–ü–ö–ê –ù–ê–ó–ê–î ===
def get_back_button():
    builder = InlineKeyboardBuilder()
    builder.button(text="‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")
    return builder.as_markup()

# === –°–ü–ò–°–û–ö –ö–û–®–ï–õ–¨–ö–û–í ===
def get_wallets_list():
    wallets = db.get_all_wallets()
    if not wallets:
        return "üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫–æ—à–µ–ª—å–∫–æ–≤."

    text = "–°–ø–∏—Å–æ–∫ –∫–æ—à–µ–ª—å–∫–æ–≤:\n"
    for wallet in wallets:
        short_address = wallet['address'][-4:]
        text += f"{wallet['name']} ({short_address}) - /Edit_{short_address}\n"

    builder = InlineKeyboardBuilder()
    builder.button(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–æ—à–µ–ª–µ–∫", callback_data="add_wallet")
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="home")
    builder.adjust(1)
    return text, builder.as_markup()

# === –ú–ï–ù–Æ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ö–û–®–ï–õ–¨–ö–û–ú ===
def get_wallet_control_keyboard(wallet_id):
    builder = InlineKeyboardBuilder()
    builder.button(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_wallet_{wallet_id}")
    builder.button(text="üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –º–æ–Ω–µ—Ç—ã", callback_data=f"edit_tokens_{wallet_id}")
    builder.button(text="‚úèÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å", callback_data=f"rename_wallet_{wallet_id}")
    builder.button(text="‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")
    builder.adjust(2)
    return builder.as_markup()

# === –í–´–ë–û–† –¢–û–ö–ï–ù–û–í –î–õ–Ø –ö–û–®–ï–õ–¨–ö–ê ===
def get_tokens_keyboard(selected_tokens, is_edit=False):
    builder = InlineKeyboardBuilder()

    for token in db.get_all_tracked_tokens():
        token_name = token['token_name']
        is_selected = "‚úÖ " if token_name in selected_tokens else ""
        builder.button(text=f"{is_selected}{token_name}", callback_data=f"toggle_token_{token_name}")

    builder.adjust(2)
    action_text = "üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å" if is_edit else "üíæ –î–æ–±–∞–≤–∏—Ç—å"
    action_callback = "save_tokens" if is_edit else "confirm_tokens"
    builder.button(text=action_text, callback_data=action_callback)
    builder.button(text="‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")
    builder.adjust(2)
    return builder.as_markup()

# === –°–ü–ò–°–û–ö –û–¢–°–õ–ï–ñ–ò–í–ê–ï–ú–´–• –¢–û–ö–ï–ù–û–í ===
def get_tracked_tokens_list():
    tokens = db.get_all_tracked_tokens()
    if not tokens:
        return "üìâ –ü–æ–∫–∞ –º—ã –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞."

    text = "–°–µ–π—á–∞—Å –º—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Ç–∞–∫–∏–µ S —Ç–æ–∫–µ–Ω—ã:\n"
    for token in tokens:
        short_address = token['contract_address'][-4:]
        text += f"{token['token_name']} (—Ç—Ä–µ–¥ {token['thread_id']}) - /edit_{short_address}\n"

    builder = InlineKeyboardBuilder()
    builder.button(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω", callback_data="add_token")
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="home")
    builder.adjust(1)
    return text, builder.as_markup()

# === –ú–ï–ù–Æ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –¢–û–ö–ï–ù–û–ú ===
def get_token_control_keyboard(token_id):
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç—Ä–µ–¥/ID", callback_data=f"edit_token_{token_id}")
    builder.button(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_token_{token_id}")
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="show_tokens")
    builder.adjust(2)
    return builder.as_markup()

# === –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –ù–ê–ó–í–ê–ù–ò–Ø –¢–û–ö–ï–ù–ê ===
def get_token_name_confirmation_keyboard():
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –î–∞", callback_data="confirm_token_name")
    builder.button(text="‚ùå –ù–µ—Ç", callback_data="reject_token_name")
    builder.adjust(2)
    return builder.as_markup()

# === –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –°–£–©–ï–°–¢–í–û–í–ê–ù–ò–Ø –¢–†–ï–î–ê ===
def get_thread_confirmation_keyboard():
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –î–∞", callback_data="thread_exists")
    builder.button(text="‚ùå –ù–µ—Ç", callback_data="thread_not_exists")
    builder.adjust(2)
    return builder.as_markup()

# === –°–ü–ò–°–û–ö –ö–û–ú–ê–ù–î ===
def get_commands_list():
    text = (
        "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "`/start` - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "`/get_thread_id` - –£–∑–Ω–∞—Ç—å ID —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–¥–∞\n"
        "`/Edit_XXXX` - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ—à–µ–ª–µ–∫ (XXXX - –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Å–∏–º–≤–æ–ª–∞ –∞–¥—Ä–µ—Å–∞)\n"
        "`/edit_XXXX` - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–∫–µ–Ω (XXXX - –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Å–∏–º–≤–æ–ª–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞)"
    )
    builder = InlineKeyboardBuilder()
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="home")
    builder.adjust(1)
    return text, builder.as_markup()