from aiogram.utils.keyboard import InlineKeyboardBuilder
from database import Database
from threads_config import TOKEN_CONFIG

db = Database()

# === –ì–õ–ê–í–ù–ï –ú–ï–ù–Æ ===
def get_main_menu():
    builder = InlineKeyboardBuilder()
    builder.button(text="üìú –ü–æ–∫–∞–∑–∞—Ç–∏ –≥–∞–º–∞–Ω—Ü—ñ", callback_data="show_wallets")
    builder.button(text="‚ûï –î–æ–¥–∞—Ç–∏ –≥–∞–º–∞–Ω–µ—Ü—å", callback_data="add_wallet")
    return builder.as_markup()

# === –ö–ù–û–ü–ö–ê –ù–ê–ó–ê–î ===
def get_back_button():
    builder = InlineKeyboardBuilder()
    builder.button(text="‚¨ÖÔ∏è –£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="home")
    return builder.as_markup()

# === –°–ü–ò–°–û–ö –ì–ê–ú–ê–ù–¶–Ü–í ===
def get_wallets_list():
    wallets = db.get_all_wallets()
    if not wallets:
        return "üì≠ –£ –≤–∞—Å –ø–æ–∫–∏ –Ω–µ–º–∞—î –≥–∞–º–∞–Ω—Ü—ñ–≤."

    text = "üìú *–í–∞—à—ñ –≥–∞–º–∞–Ω—Ü—ñ:*\n\n"
    for wallet in wallets:
        short_address = wallet['address'][-4:]
        text += f"üîπ {wallet['name']} ({short_address}) ‚Äî /Edit_{short_address}\n"

    builder = InlineKeyboardBuilder()
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="home")
    builder.adjust(1)  # –†–æ–∑—Ç–∞—à–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É –≤ –æ–¥–∏–Ω —Å—Ç–æ–≤–ø–µ—Ü—å

    return text, builder.as_markup()

# === –ú–ï–ù–Æ –£–ü–†–ê–í–õ–Ü–ù–ù–Ø –ì–ê–ú–ê–ù–¶–ï–ú ===
def get_wallet_control_keyboard(wallet_id):
    builder = InlineKeyboardBuilder()
    builder.button(text="üóë –í–∏–¥–∞–ª–∏—Ç–∏", callback_data=f"delete_wallet_{wallet_id}")
    builder.button(text="üîÑ –ó–º—ñ–Ω–∏—Ç–∏ –º–æ–Ω–µ—Ç–∏", callback_data=f"edit_tokens_{wallet_id}")
    builder.button(text="‚úèÔ∏è –ü–µ—Ä–µ–π–º–µ–Ω—É–≤–∞—Ç–∏", callback_data=f"rename_wallet_{wallet_id}")
    builder.button(text="‚¨ÖÔ∏è –£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="home")
    builder.adjust(2)  # –†–æ–∑—Ç–∞—à–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥
    return builder.as_markup()

# === –í–ò–ë–Ü–† –¢–û–ö–ï–ù–Ü–í (2 –ö–ù–û–ü–ö–ò –í –†–Ø–î) ===
def get_tokens_keyboard(selected_tokens):
    builder = InlineKeyboardBuilder()

    for token_name in TOKEN_CONFIG:
        is_selected = "‚úÖ " if token_name in selected_tokens else ""
        builder.button(text=f"{is_selected}{token_name}", callback_data=f"toggle_token_{token_name}")

    # –†–æ–∑—Ç–∞—à–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥
    builder.adjust(2)

    # –í–Ω–∏–∑—É —Ä–æ–±–∏–º–æ –∫–Ω–æ–ø–∫–∏ "–î–æ–¥–∞—Ç–∏" —ñ "–ù–∞–∑–∞–¥" –≤ –æ–¥–∏–Ω —Ä—è–¥
    builder.button(text="‚úÖ –î–æ–¥–∞—Ç–∏", callback_data="confirm_tokens")
    builder.button(text="‚¨ÖÔ∏è –£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="home")
    builder.adjust(2)  # –©–æ–± –≤–æ–Ω–∏ —Ç–∞–∫–æ–∂ –±—É–ª–∏ –≤ —Ä—è–¥

    return builder.as_markup()