import asyncio
from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from interface import register_handlers, get_main_menu
from config.settings import BOT_TOKEN, CHAT_ID
from utils.logger_config import logger
from transaction_manager import start_transaction_monitoring

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

logger.info("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤")
register_handlers(dp)
logger.info("–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

@dp.message(Command("start"))
async def start_command(message):
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –ø–æ–ª—É—á–µ–Ω–∞ –æ—Ç {message.from_user.id}")
    menu = get_main_menu()
    await message.answer("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏!", reply_markup=menu)
    settings = db.get_all_settings()
    if int(settings.get("INTERFACE_INFO", "0")):
        logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")

@dp.message(Command("get_last_transaction"))
async def get_last_transaction_command(message):
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /get_last_transaction –ø–æ–ª—É—á–µ–Ω–∞ –æ—Ç {message.from_user.id}")
    await message.answer("–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!")
    settings = db.get_all_settings()
    if int(settings.get("INTERFACE_INFO", "0")):
        logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /get_last_transaction –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")

@dp.message(Command("get_thread_id"))
async def get_thread_id_command(message):
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /get_thread_id –ø–æ–ª—É—á–µ–Ω–∞ –æ—Ç {message.from_user.id}")
    thread_id = message.message_thread_id if message.is_topic_message else "–ù–µ—Ç —Ç—Ä–µ–¥–∞"
    await message.answer(f"ID —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–¥–∞: `{thread_id}`", parse_mode="Markdown")
    settings = db.get_all_settings()
    if int(settings.get("INTERFACE_INFO", "0")):
        logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /get_thread_id –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")

async def main():
    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥–µ—Ç –Ω–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏!")
    asyncio.create_task(start_transaction_monitoring(bot, CHAT_ID))
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())