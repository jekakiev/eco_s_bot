import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from config import BOT_TOKEN
from arbiscan import get_token_transactions  # –§—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
from message_formatter import format_swap_message  # –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
from wallets_config import WATCHED_WALLETS  # –ì–∞–º–∞–Ω—Ü—ñ
from threads_config import TOKEN_CONFIG, DEFAULT_THREAD_ID  # –ú–∞–ø—ñ–Ω–≥ —Ç–æ–∫–µ–Ω—ñ–≤ —ñ —Ç—Ä–µ–¥—ñ–≤
from logger_config import logger  # –ù–∞—à –ª–æ–≥–µ—Ä

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ —ñ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
CHECK_INTERVAL = 10  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–∂–Ω—ñ 10 —Å–µ–∫—É–Ω–¥
CHAT_ID = -1002458140371  # Chat ID –≥—Ä—É–ø–∏

# –û—Å—Ç–∞–Ω–Ω—ñ —Ö–µ—à—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
last_tx_hash = {}

# –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–æ–≤–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
async def check_token_transactions():
    global last_tx_hash

    while True:
        logger.info("üîç –ü–æ—á–∏–Ω–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–æ–≤–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π...")
        
        for wallet_address, wallet_name in WATCHED_WALLETS.items():
            transactions = get_token_transactions(wallet_address)
            
            if not isinstance(transactions, list) or not transactions:
                logger.warning(f"‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –¥–ª—è {wallet_address}")
                continue
            
            for tx in transactions:
                tx_hash = tx["hash"]

                # –õ–æ–≥—É—î–º–æ –∫–æ–∂–Ω—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é
                logger.info(f"üì° –û—Ç—Ä–∏–º–∞–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è {tx_hash} –¥–ª—è {wallet_name}")

                if last_tx_hash.get(wallet_address) == tx_hash:
                    logger.info(f"üîÑ –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è {tx_hash} –≤–∂–µ –±—É–ª–∞ –æ–±—Ä–æ–±–ª–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ.")
                    continue

                # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–≤–∏–π –æ—Å—Ç–∞–Ω–Ω—ñ–π —Ö–µ—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
                last_tx_hash[wallet_address] = tx_hash

                token_name = tx.get("token_in", "–ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–æ–∫–µ–Ω")
                token_data = TOKEN_CONFIG.get(token_name, {})

                if not token_data:
                    logger.warning(f"‚ö†Ô∏è –¢–æ–∫–µ–Ω {token_name} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É –º–∞–ø—ñ–Ω–≥—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ DEFAULT_THREAD_ID")
                
                thread_id = token_data.get("thread_id", DEFAULT_THREAD_ID)

                logger.info(f"üì© –ì–æ—Ç—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Ç–æ–∫–µ–Ω–∞ {token_name} —É —Ç—Ä–µ–¥ {thread_id}")

                # –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                text, parse_mode = format_swap_message(
                    tx_hash=tx_hash,
                    sender=wallet_name,
                    sender_url=f"https://arbiscan.io/address/{wallet_address}",
                    amount_in=tx.get("amount_in", 0),
                    token_in=tx.get("token_in", "–ù–µ–≤—ñ–¥–æ–º–æ"),
                    token_in_url=f"https://arbiscan.io/token/{tx.get('token_in_address', '')}",
                    amount_out=tx.get("amount_out", 0),
                    token_out=tx.get("token_out", "–ù–µ–≤—ñ–¥–æ–º–æ"),
                    token_out_url=f"https://arbiscan.io/token/{tx.get('token_out_address', '')}",
                    usd_value=tx.get("usd_value", "–ù–µ–≤—ñ–¥–æ–º–æ")
                )

                # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                try:
                    logger.info(f"üì§ –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É —Ç—Ä–µ–¥ {thread_id}...")
                    await bot.send_message(
                        chat_id=CHAT_ID, 
                        message_thread_id=thread_id, 
                        text=text, 
                        parse_mode=parse_mode, 
                        disable_web_page_preview=True
                    )
                    logger.info(f"‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è {token_name} —É —Ç—Ä–µ–¥ {thread_id}")
                except Exception as e:
                    logger.error(f"‚ùå –ü–û–ú–ò–õ–ö–ê –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {str(e)}")

        logger.info("‚è≥ –ß–µ–∫–∞—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ü–∏–∫–ª –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏...")
        await asyncio.sleep(CHECK_INTERVAL)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!")
    asyncio.create_task(check_token_transactions())  # –ó–∞–ø—É—Å–∫–∞—î–º–æ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
