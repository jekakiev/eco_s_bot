# /webhook_server.py
from flask import Flask, request, jsonify
from aiogram import Bot
from config.settings import BOT_TOKEN, CHAT_ID, DEFAULT_THREAD_ID
from utils.logger_config import logger, should_log
import asyncio
import threading
import os

app = Flask(__name__)
bot = Bot(token=BOT_TOKEN)
loop = asyncio.get_event_loop()

@app.route('/webhook', methods=['POST'])
def handle_webhook():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±—Ö—É–∫–æ–≤ –æ—Ç Moralis Streams API."""
    try:
        data = request.json
        if should_log("debug"):
            logger.debug(f"–ü–æ–ª—É—á–µ–Ω –≤–µ–±—Ö—É–∫: {data}")
        
        if 'txs' in data and data['txs']:
            tx = data['txs'][0]
            tx_hash = tx.get('hash', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            from_address = tx.get('from', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            to_address = tx.get('to', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            value = tx.get('value', '0')  # –í wei, –µ—Å–ª–∏ –Ω–∞—Ç–∏–≤–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è
            
            message = (
                f"üì¢ –ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è!\n"
                f"–•—ç—à: `{tx_hash}`\n"
                f"–û—Ç: `{from_address[-4:]}`\n"
                f"–ö: `{to_address[-4:]}`\n"
                f"–°—É–º–º–∞: {value} wei (–Ω–∞—Ç–∏–≤–Ω–∞—è)\n"
                f"üîó [–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å](https://arbiscan.io/tx/{tx_hash})"
            )
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
            asyncio.run_coroutine_threadsafe(
                bot.send_message(chat_id=CHAT_ID, text=message, parse_mode="Markdown", disable_web_page_preview=True),
                loop
            )
            if should_log("transaction"):
                logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {tx_hash}")
        
        return jsonify({"status": "success"}), 200
    except Exception as e:
        if should_log("api_errors"):
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±—Ö—É–∫–∞: {str(e)}", exc_info=True)
        return jsonify({"status": "error", "message": str(e)}), 500

def run_flask():
    """–ó–∞–ø—É—Å–∫ Flask —Å–µ—Ä–≤–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º –ø–æ—Ä—Ç–æ–º."""
    port = int(os.getenv("PORT", 8080))  # –ò—Å–ø–æ–ª—å–∑—É–µ–º PORT –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ 8080 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    logger.info(f"Flask —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    app.run(host='0.0.0.0', port=port, debug=False)

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    threading.Thread(target=run_flask, daemon=True).start()
    logger.info("Flask —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±—Ö—É–∫–æ–≤")